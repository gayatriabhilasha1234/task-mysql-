mysql> CREATE DATABASE students_db;
Query OK, 1 row affected (0.01 sec)

mysql> USE students_db;
Database changed
mysql> CREATE TABLE students (student_id INT PRIMARY KEY AUTO_INCREMENT, student_name VARCHAR(100), email VARCHAR(100));
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE subjects (subject_id INT PRIMARY KEY AUTO_INCREMENT, subject_name VARCHAR(100), credits INT);
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE enrollments (enrollment_id INT PRIMARY KEY AUTO_INCREMENT, student_id INT, enrollment_date DATE, total_credits INT, FOREIGN KEY (student_id) REFERENCES students(student_id));
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE TABLE enrollment_items (enrollment_item_id INT PRIMARY KEY AUTO_INCREMENT, enrollment_id INT, subject_id INT, grade VARCHAR(5), FOREIGN KEY (enrollment_id) REFERENCES enrollments(enrollment_id), FOREIGN KEY (subject_id) REFERENCES subjects(subject_id));
Query OK, 0 rows affected (0.05 sec)

mysql> INSERT INTO students (student_name, email) VALUES ('Alice', 'alice@example.com'), ('Bob', 'bob@example.com'), ('Charlie', 'charlie@example.com');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO subjects (subject_name, credits) VALUES ('Mathematics', 4), ('Physics', 3), ('Chemistry', 3), ('Biology', 2);
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO enrollments (student_id, enrollment_date, total_credits) VALUES (1, '2025-06-01', 7), (2, '2025-06-02', 6), (3, '2025-06-03', 5);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO enrollment_items (enrollment_id, subject_id, grade) VALUES (1, 1, 'A'), (1, 3, 'B'), (2, 2, 'A'), (3, 3, 'B'), (3, 4, 'C');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM students ORDER BY student_name;
+------------+--------------+---------------------+
| student_id | student_name | email               |
+------------+--------------+---------------------+
|          1 | Alice        | alice@example.com   |
|          2 | Bob          | bob@example.com     |
|          3 | Charlie      | charlie@example.com |
+------------+--------------+---------------------+
3 rows in set (0.01 sec)

mysql> SELECT subject_name, credits FROM subjects WHERE credits > 3;
+--------------+---------+
| subject_name | credits |
+--------------+---------+
| Mathematics  |       4 |
+--------------+---------+
1 row in set (0.01 sec)

mysql> SELECT student_id, COUNT(enrollment_id) AS total_enrollments FROM enrollments GROUP BY student_id ORDER BY total_enrollments DESC;
+------------+-------------------+
| student_id | total_enrollments |
+------------+-------------------+
|          1 |                 1 |
|          2 |                 1 |
|          3 |                 1 |
+------------+-------------------+
3 rows in set (0.01 sec)

mysql> SELECT e.enrollment_id, s.student_name, e.total_credits
    -> FROM enrollments e
    -> INNER JOIN students s ON e.student_id = s.student_id;
+---------------+--------------+---------------+
| enrollment_id | student_name | total_credits |
+---------------+--------------+---------------+
|             1 | Alice        |             7 |
|             2 | Bob          |             6 |
|             3 | Charlie      |             5 |
+---------------+--------------+---------------+
3 rows in set (0.00 sec)

mysql> SELECT s.student_name, e.enrollment_id
    -> FROM students s
    -> LEFT JOIN enrollments e ON s.student_id = e.student_id;
+--------------+---------------+
| student_name | enrollment_id |
+--------------+---------------+
| Alice        |             1 |
| Bob          |             2 |
| Charlie      |             3 |
+--------------+---------------+
3 rows in set (0.00 sec)

mysql> SELECT e.enrollment_id, s.student_name
    -> FROM enrollments e
    -> RIGHT JOIN students s ON e.student_id = s.student_id;
+---------------+--------------+
| enrollment_id | student_name |
+---------------+--------------+
|             1 | Alice        |
|             2 | Bob          |
|             3 | Charlie      |
+---------------+--------------+
3 rows in set (0.00 sec)

mysql> SELECT e.enrollment_id, s.student_name
    -> FROM enrollments e
    -> RIGHT JOIN students s ON e.student_id = s.student_id;
+---------------+--------------+
| enrollment_id | student_name |
+---------------+--------------+
|             1 | Alice        |
|             2 | Bob          |
|             3 | Charlie      |
+---------------+--------------+
3 rows in set (0.00 sec)

mysql> SELECT SUM(total_credits) AS total_credits FROM enrollments;
+---------------+
| total_credits |
+---------------+
|            18 |
+---------------+
1 row in set (0.00 sec)

mysql> SELECT AVG(credits) AS average_credits FROM subjects;
+-----------------+
| average_credits |
+-----------------+
|          3.0000 |
+-----------------+
1 row in set (0.00 sec)

mysql> CREATE VIEW student_enrollment_summary AS
    -> SELECT s.student_name,
    ->        COUNT(e.enrollment_id) AS total_enrollments,
    ->        SUM(e.total_credits) AS total_credits
    -> FROM students s
    -> LEFT JOIN enrollments e ON s.student_id = e.student_id
    -> GROUP BY s.student_name;
Query OK, 0 rows affected (0.01 sec)

mysql> SELECT * FROM student_enrollment_summary;
+--------------+-------------------+---------------+
| student_name | total_enrollments | total_credits |
+--------------+-------------------+---------------+
| Alice        |                 1 |             7 |
| Bob          |                 1 |             6 |
| Charlie      |                 1 |             5 |
+--------------+-------------------+---------------+
3 rows in set (0.00 sec)

mysql> SELECT student_name, COALESCE(email, 'No Email') AS email_info FROM students;
+--------------+---------------------+
| student_name | email_info          |
+--------------+---------------------+
| Alice        | alice@example.com   |
| Bob          | bob@example.com     |
| Charlie      | charlie@example.com |
+--------------+---------------------+
3 rows in set (0.00 sec)